@inject GrpcChannel grpcChannel

<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" @bind-Value="postModel.Header" Label="Header" HelperText="Required" Required="true" Validation="@Utils.FluentValidate(80, true, "Header", 10).Validation" Immediate="true" />
                <MudTextField T="string" @bind-Value="postModel.SubHeader" Label="Subheader" Validation="@Utils.FluentValidate(128, false, "Subheader").Validation" Immediate="true" />
                <MudTextField T="string" @bind-Value="postModel.Content" Label="Content" HelperText="Required" Required="true" Lines="5" Validation="@Utils.FluentValidate(8192, true, "Content", 10).Validation" Immediate="true" />
                <div class="d-flex">
                    <MudTextField T="string" @bind-Value="postModel.ImageUrl" Label="Image Url" Placeholder="https://" Variant="Variant.Filled" Margin="Margin.Dense" Validation="@Utils.FluentValidate(256, false, "Image URL").Validation" Immediate="true" />
                    &nbsp;&nbsp;<MudTextField T="string" @bind-Value="postModel.MoreInfoUrl" Label="More Info Url" Placeholder="https://" Margin="Margin.Dense" Variant="Variant.Filled" Validation="@Utils.FluentValidate(256, false, "More Info URL").Validation" Immediate="true" />
                </div>
            </MudForm>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        @if (postModel.Id != 0)
        {
            <MudTooltip Text="Delete">
                <MudElement>
                    <MudIconButton OnClick="@ToggleDeleteAck" Size="Size.Large" Icon="@Icons.Material.Filled.Delete" Color="Color.Tertiary"></MudIconButton>
                    <MudPopover Open="@deleteAck" Class="d-flex pa-3 ma-3" Style="width:94px;">
                        <MudIconButton Class="ma-0 pa-0" OnClick="@ToggleDeleteAck" Size="Size.Large" Title="Cancel" Icon="@Icons.Material.Filled.Cancel" Color="Color.Inherit"></MudIconButton>
                        <MudIconButton Class="ma-0 pa-0" OnClick="DeleteBlogPost" Size="Size.Large" Title="Delete" Icon="@Icons.Material.Filled.Delete" Color="Color.Tertiary"></MudIconButton>
                    </MudPopover>
                </MudElement>
            </MudTooltip>
        }
        <MudTooltip Text="Cancel">
            <MudIconButton OnClick="Cancel" Size="Size.Large" Icon="@Icons.Material.Filled.Cancel" Color="Color.Inherit" Disabled="deleteAck"></MudIconButton>
        </MudTooltip>
        <MudTooltip Text="Save">
            <MudIconButton OnClick="SubmitForm" Size="Size.Large" Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Default" Disabled="deleteAck"></MudIconButton>
        </MudTooltip>
    </DialogActions>
</MudDialog>

<MudOverlay Visible="deleteAck" DarkBackground="true" Absolute="true"></MudOverlay>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public int Id { get; set; }
    [Parameter] public string Header { get; set; }
    [Parameter] public string SubHeader { get; set; }
    [Parameter] public string Content { get; set; }
    [Parameter] public string ImageUrl { get; set; }
    [Parameter] public string MoreInfoUrl { get; set; }

    bool success = false;
    bool deleteAck = false;
    string[] errors = { };
    MudForm form;
    Post postModel;

    protected override void OnInitialized()
    {
        postModel = new()
        {
            Id = 0,
            Header = string.Empty,
            SubHeader = string.Empty,
            Content = string.Empty,
            ImageUrl = string.Empty,
            MoreInfoUrl = string.Empty,
            DatePublished = DateTime.UtcNow.Ticks,
            AuthorId = "0", // temporary
            StatusEnum = Post.Types.Status.Published, // #TODO
            ActionEnum = Post.Types.Action.Insert // Insert = default
        };
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Id != 0) // update
        {
            postModel.Id = Id;
            postModel.Header = Header;
            postModel.SubHeader = SubHeader;
            postModel.Content = Content;
            postModel.ImageUrl = ImageUrl;
            postModel.MoreInfoUrl = MoreInfoUrl;
            postModel.ActionEnum = Post.Types.Action.Update; // if update change postModel.ActionEnum
        }
    }

    private async Task SubmitForm()
    {
        form.Validate();
        if (success)
        {
            var client = new Blogger.BloggerClient(grpcChannel);
            ResultResponse serverReply = await client.SubsertPostAsync(postModel);
            MudDialog.Close(DialogResult.Ok(serverReply.Message));
        }
    }

    private async Task DeleteBlogPost()
    {
        postModel.ActionEnum = Post.Types.Action.SoftDelete;
        postModel.StatusEnum = Post.Types.Status.Deleted;
        var client = new Blogger.BloggerClient(grpcChannel);
        ResultResponse serverReply = await client.SubsertPostAsync(postModel);
        MudDialog.Close(DialogResult.Ok(serverReply.Message));
    }

    private void Cancel() => MudDialog.Cancel();

    private void ToggleDeleteAck()
    {
        if (deleteAck)
            deleteAck = false;
        else
            deleteAck = true;
    }
}
