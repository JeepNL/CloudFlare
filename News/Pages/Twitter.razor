@page "/twitter"
@using System.Net
@using System.Text.Json;
@inject ICookieService CookieService
@inject ILocalStorageService LocalStorageAsync
@inject NavigationManager NavMan
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@inject HttpClient HttpClient
@inject GrpcChannel GrpcChannel

<PageTitle>@pageTitle</PageTitle>
<HeadContent><meta name="description" content="@pageDesc" /></HeadContent>

<MudText Typo="Typo.h4">Twitter Utilities</MudText>
<MudText Class="mb-6" Typo="Typo.subtitle1">Preview</MudText>

<MudText Class="mb-4" Typo="Typo.body1">
    BlazorBits Twitter integration with <MudLink Href="https://twitter.com/JoeMayo" Target="_blank">Joe Mayo</MudLink>'s <MudLink Href="https://github.com/JoeMayo/LinqToTwitter" Target="_blank">LinqToTwitter</MudLink> library.
    When you click the button below you'll be redirected to the Twitter authentication page for external apps where you can allow BlazorBits access your Twitter account.
</MudText>

<MudText Class="mb-4" Typo="Typo.body1">
    Currently you'll only see some basic information about your Twitter account, but that will change in the near future, more functionality will follow soon.
</MudText>

@if (l2tUser is null)
{
    <MudButton Class="mt-4" OnClick="TwitterChallenge" Variant="Variant.Filled" Color="Color.Primary" Style="text-transform:none">Twitter authentication</MudButton>
}
else
{
    <MudGrid>
        <MudItem xs="12" sm="10" md="8" lg="6" xl="4">
            <MudSimpleTable Dense=true Striped=true Bordered=false Style="overflow-x: auto;">
                <tbody>
                    <tr><td>Tweets: @l2tUser.StatusesCount</td><td>Favorites: @l2tUser.FavouritesCount</td><td>Listed: @l2tUser.ListedCount</td></tr>
                    <tr>
                        <td colspan="3">
                            <img src="@l2tUser.ProfileImageB64" style="float: left; margin-right: 10px; margin-bottom: 4px;">
                            @l2tUser.Name
                            @if (@l2tUser.Protected)
                            {
                                <MudIcon Icon="@Icons.Filled.Lock" Title="Locked" Size="Size.Small" />
                            }
                            @if (@l2tUser.Verified)
                            {
                                <MudIcon Icon="@Icons.Filled.Verified" Title="Verified" Size="Size.Small" />
                            }
                            (@@@l2tUser.ScreenName, @l2tUser.IdStr)
                            <br />@l2tUser.Description
                            <br />@l2tUser.Location
                            <br />@l2tUser.Website
                            <br />@l2tUser.CreatedAt
                        </td>
                    </tr>
                    <tr><td>Followers: @l2tUser.FollowersCount</td><td colspan="2">Following: @l2tUser.FriendsCount</td></tr>

                </tbody>
            </MudSimpleTable>
        </MudItem>
    </MudGrid>

    <MudElement Class="mt-4">
        <img src="@imageRoot/blazor.webp" alt="Blazor Logo" />
    </MudElement>
}

@code {
    private string pageTitle = "Twitter | BlazorBits";
    private string pageDesc = "Twitter Utilities";
    L2TUser l2tUser = new();
    string backend = string.Empty;
    string imageRoot = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        backend = Configuration["Settings:BackEndUrl"];
        imageRoot = $"https://{backend}/images";

        l2tUser = await LocalStorageAsync.GetItemAsync<L2TUser>("_l2t");
        if (l2tUser is null)
        {
            string cookieValueB64 = await CookieService.GetValue("_l2t");
            if (!string.IsNullOrEmpty(cookieValueB64))
            {
                string cookieValueJson = Utils.FromB64(WebUtility.UrlDecode(cookieValueB64));
                l2tUser = JsonSerializer.Deserialize<L2TUser>(cookieValueJson);
                l2tUser.ProfileImageB64 = await GetUserImageAsync();
                await LocalStorageAsync.SetItemAsync<L2TUser>("_l2t", l2tUser);
            }
        }
    }

    private void TwitterChallenge()
    {
        NavMan.NavigateTo($"https://{backend}/Twitter/Authenticate", true); // Server/Controllers/TwitterController.cs
    }

    private async Task<string> GetUserImageAsync()
    {
        ProfileImage profileImage = new()
            {
                Url = l2tUser.ProfileImageUrlHttps,
                Default = l2tUser.DefaultProfileImage,
                SizeEnum = ProfileImage.Types.Size.Bigger
            };
        var grpcClient = new L2T.L2TClient(GrpcChannel);
        ProfileImageResponse imageResponse = await grpcClient.GetProfileImageAsync(profileImage);
        return $"data:{imageResponse.FileExt};base64,{imageResponse.Base64}";
    }
}
