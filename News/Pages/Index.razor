@page "/"
<MudText Typo="Typo.h4">Blazor Is The Future!</MudText>
<MudText Class="mb-6" Typo="Typo.subtitle1">And the future is now!</MudText>

@if (!string.IsNullOrEmpty(userName))
{
    <MudText Class="mt-4 mb-2" Typo="Typo.body2"><b>Hello @userName!</b></MudText>
}

<MudGrid>
    <MudItem xs="12" xl="11">
        <MudPaper Elevation="2" Class="mt-4 pa-2">
            <img src="/images/dotNETDropMic.webp" width="140" align="right" style="margin-left: 0.5em" />
            <MudText Typo="Typo.h5" Class="pa-2">About BlazorBits: privacy first, mobile second ...</MudText>
            <MudText Typo="Typo.body1" Class="pa-2">
                This is an <MudLink Href="https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-rc-1/" Target="_blank">ASP.NET Core 6 <b>RC 1</b></MudLink>
                <i>(September 14th, 2021 - THAT'S TODAY 🚀)</i> Mobile Friendly <MudLink Href="https://blazor.net/" Target="_blank">Blazor</MudLink> WebAssembly <i>(WASM)</i> Single Page
                Application <i>(SPA)</i> prototype using <MudLink Href="https://mudblazor.com/" Target="_blank">MudBlazor</MudLink> Components and the static part, the
                front-end <i>(client side)</i>, is hosted <i>(for free!)</i> on <MudLink Href="https://pages.cloudflare.com/" Target="_blank">Cloudflare Pages</MudLink>.
                The website is using remote <MudLink Href="https://docs.microsoft.com/en-us/aspnet/core/grpc/" Target="_blank">.NET gRPC Services</MudLink> running on a
                co-located <MudLink Href="https://www.transip.eu/vps/bladevps/" Target="_blank">TransIp/X4</MudLink> Ubuntu 20.04 Virtual Private Server <i>(VPS)</i> for its
                dynamic data from a remote SQLite database and for authorization & authentication <i>(register & login)</i>. You can find the client side source on
                <MudLink Href="https://github.com/JeepNL/CloudFlare" Target="_blank">GitHub</MudLink>. Oh, I almost forgot, light and dark themes are also supported and
                when you register the email you'll receive to verify your email address passes SPF/DKIM/DMARC validations. Free SSL certificate for the back-end server
                provided by <MudLink Href="https://letsencrypt.org/" Target="_blank">Let's Encrypt</MudLink>. Last but not least: BlazorBits doesn't use any tracking cookies!
            </MudText>
        </MudPaper>

        <MudAlert Elevation="2" Severity="Severity.Warning" Variant="Variant.Text" Icon="@Icons.Material.Outlined.TextSnippet" Class="mt-6">
            <MudText Typo="Typo.body1">
                <MudTooltip Text="Niels Swimberghe on Twitter"><MudLink Href="https://twitter.com/RealSwimburger" Target="_blank" Typo="Typo.body1">Niels Swimberghe</MudLink></MudTooltip> wrote a great
                <MudTooltip Text="RTBP 😉"><MudLink Href="https://swimburger.net/blog/dotnet/how-to-deploy-blazor-webassembly-to-cloudflare-pages" Target="_blank" Typo="Typo.body1">blog post</MudLink></MudTooltip> on
                how to deploy your Blazor WebAssembly app to Cloudflare Pages.
            </MudText>
        </MudAlert>

        <MudPaper Elevation="2" Class="mt-6 px-4 pb-4 pt-2">
            <MudText Typo="Typo.body1" Class="my-1">To use the latest .NET 6 <b>RC1</b> SDK and the "<b>wasm-tools</b>" on Cloudflare Pages you'll need to modify the build command:</MudText>
            <MudAlert Elevation="0" Severity="Severity.Info" Variant="Variant.Filled" NoIcon="false">
                <samp>wget https://download.visualstudio.microsoft.com/download/pr/4880c5a4-9c22-47a7-b298-651f1294a385/795f7828d8684059705e625b33027f89/dotnet-sdk-6.0.100-rc.1.21458.32-linux-x64.tar.gz;mkdir -p ./dotnet;tar zxf dotnet-sdk-6.0.100-rc.1.21458.32-linux-x64.tar.gz -C ./dotnet;./dotnet/dotnet --info;./dotnet/dotnet publish -c Release -o output;</samp>
            </MudAlert>
        </MudPaper>
    </MudItem>

    <MudItem>
        <MudText Typo="Typo.h5">Books you want, you need, you really can't live without 😉</MudText>
        <MudText Typo="Typo.body1"><i>I do like to promote stuff I love!</i></MudText>
    </MudItem>

    <MudItem xs="12" md="12" Class="d-flex flex-wrap">
        <MudItem Class="d-flex flex-wrap mr-4 mb-8">
            <MudLink Href="https://www.manning.com/books/blazor-in-action" Target="_blank"><img src="/images/Sainty-Blazor-MEAP.webp" width="360" height="451" /></MudLink>
            <MudCard Elevation=0 Class="ma-0 pa-0" Style="height: 451px;">
                <MudCardContent Class="pa-4 ma-0" Style="width:360px;">
                    <MudText Typo="Typo.h6" Class="my-0">Blazor In Action (MEAP)</MudText>
                    <MudButton Class="ma-0 pa-0" Link="https://twitter.com/Chris_Sainty" Target="_blank"
                               Variant="Variant.Text" EndIcon="@Icons.Custom.Brands.Twitter" Color="Color.Primary"
                               Style="text-transform:none">Chris Sainty</MudButton>
                    <MudText Typo="Typo.body1" Class="my-3">An example-driven guide to building reusable UI components and web frontends - all with Blazor, C#, and .NET.</MudText>
                    <MudText Typo="Typo.body2" Class="mb-0">
                        Blazor, a powerful C#-based frontend framework from Microsoft, makes it easy to create fast rich web applications without
                        the limitations of typical JavaScript-based tools. Blazor components seamlessly blend C# and standard HTML markup, so you can build web frontends
                        using the same technology as your server-side code. With Blazor WebAssembly, you can also run your C# code natively in the browser.
                    </MudText>
                </MudCardContent>
                <MudCardActions Class="pa-0 ma-0">
                    <MudLink Typo="Typo.subtitle1" Class="ml-4 my-0" Color="Color.Primary" Href="https://www.manning.com/books/blazor-in-action" Target="_blank">More info ...</MudLink>
                </MudCardActions>
            </MudCard>
        </MudItem>

        <MudItem Class="d-flex flex-wrap mb-8">
            <MudLink Href="https://www.manning.com/books/entity-framework-core-in-action-second-edition" Target="_blank"><img src="/images/Smith-EFC-2ed-HI.webp" width="360" height="451" /></MudLink>
            <MudCard Elevation=0 Class="mr-0 pa-0" Style="height: 451px;">
                <MudCardContent Class="pa-4 ma-0" Style="width:360px;">
                    <MudText Typo="Typo.h6" Class="my-0">Entity Framework Core in Action, Second Edition</MudText>
                    <MudButton Class="ma-0 pa-0" Link="https://twitter.com/thereformedprog" Target="_blank"
                               Variant="Variant.Text" EndIcon="@Icons.Custom.Brands.Twitter" Color="Color.Primary"
                               Style="text-transform:none">Jon P Smith</MudButton>
                    <MudText Typo="Typo.body1" Class="my-3">Entity Framework Core in Action, Second Edition is an in-depth guide to reading and writing databases with EF Core.</MudText>
                    <MudText Typo="Typo.body2" Class="mb-0">
                        Revised from the bestselling original edition, it’s filled with over 100 diagrams, code snippets, and examples—including building and scaling your
                        own bookselling web application. Learn from author Jon Smith’s extensive experience working with EF Core in production, as you discover time-saving
                        patterns and best practices for security, performance tuning, and unit testing. All of the book’s code is available on GitHub.
                    </MudText>
                </MudCardContent>
                <MudCardActions Class="pa-0 ma-0">
                    <MudLink Typo="Typo.subtitle1" Class="ml-4 mt-0" Color="Color.Primary" Href="https://www.manning.com/books/entity-framework-core-in-action-second-edition" Target="_blank">More info ...</MudLink>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudItem>
</MudGrid>

@code {
    [CascadingParameter]
    protected UserStateModel UserStateModel { get; set; }
    string userName = string.Empty;

    protected override void OnParametersSet()
    {
        userName = UserStateModel.FirstName;
        if (string.IsNullOrEmpty(userName))
        {
            userName = AbbrEmail(UserStateModel.Email);
            if (userName.IndexOf("@") >= 1)
                userName = userName.Substring(0, userName.IndexOf("@"));
        }
    }

    private string AbbrEmail(string input)
    {
        if (input.IndexOf("@") >= 1)
            input = input.Substring(0, input.IndexOf("@"));
        return input;
    }
}
