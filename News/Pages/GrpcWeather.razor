@page "/weather"
@inject GrpcChannel grpcChannel
<PageTitle>@pageTitle</PageTitle>
<HeadContent><meta name="description" content="@pageDesc" /></HeadContent>

<MudText Typo="Typo.h4">2 Year Weather Forecast</MudText>
<MudText Class="mb-6" Typo="Typo.subtitle1">This component demonstrates fetching (<i>random!</i>) gRPC data from a remote server.</MudText>

<MudGrid>
    <MudItem xs="12" sm="10" md="8" lg="6" xl="4">
        @if (forecasts is null)
        {
            <MudText Typo="Typo.body1">Loading</MudText>
        }
        else
        {
            <MudTable Items="forecasts" Dense="true" Hover="true" Elevation="0" RowsPerPage="25" Virtualize="true">
                <HeaderContent>
                    <MudTh>Date</MudTh>
                    <MudTh>Temp. (C)</MudTh>
                    <MudTh>Temp. (F)</MudTh>
                    <MudTh>Summary</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Date">@DateTime.Parse(context.Date.ToString().Replace("\"", "")).ToLocalTime()</MudTd>
                    <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
                    <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
                    <MudTd DataLabel="Summary">@context.Summary</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[]{10, 25, 50}" />
                </PagerContent>
            </MudTable>
        }
    </MudItem>
</MudGrid>

@code {
    private IEnumerable<WeatherForecast> forecasts = null;

    private string pageTitle = "Weather | BlazorBits";
    private string pageDesc = "This BlazorBits component demonstrates fetching random gRPC data using a .NET gRPC service hosted on a remote Ubuntu VPS.";

    protected override async Task OnInitializedAsync()
    {
        var client = new WeatherForecasts.WeatherForecastsClient(grpcChannel);
        forecasts = (await client.GetWeatherForecastsAsync(new Empty())).Forecasts;
    }
}
